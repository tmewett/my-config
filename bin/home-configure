#!/usr/bin/env fish

function hc_state_changed -a key value
    if test ! -e $hc_state/$key
        return 0
    end
    read -z last_value < $hc_state/$key
    if test $value = $last_value
        return 1
    end
    return 0
end

function hc_doing -a message
    echo $message
    set -q _hc_doing
end

function hc_state_save -a key value
    echo -n $value > $hc_state/$key
end

function safe_symlink -a to from
    if test -L $from
        readlink -z $from | read -z existing_to
        if test $to != $existing_to
            hc_doing "removing existing symlink $from"
            and rm $from
        else
            return 0
        end
    end
    if test ! -L $from -a -e $from && hc_doing "asking to remove existing file/directory $from"
        ls -l $from
        test "$(read -P "delete $from? (y/N) ")" = "y" || return
        rm -r $from
    end
    hc_doing "creating $from -> $to"
    and mkdir -p (dirname $from)
    and ln -sT $to $from
end

function safe_rm_symlink -a link
    if test -L $link && hc_doing "removing $link"
        rm $link
    end
end

set hc_status 0

function hc_if -a message
    # test $status -eq 0
    and not set -q hc_dry_run
    set hc_status $status
end

function hc_then
    test $hc_status -eq 0
    and $argv
end

function hc_then_symlink -a to from
    if test $hc_status -eq 0
        safe_symlink $to $from
    else
        safe_rm_symlink $from
    end
end

function hc_then_sudo_put_file -a src dest
    if test $hc_status -eq 0
        hc_doing "copying $src -> $dest"
        and not cmp -s $src $dest
        and sudo cp -T $src $dest
    else
        test -e $dest
        and hc_doing "deleting $dest"
        and sudo rm $dest
    end
end

function hc_set_state_by
    if hc_state_changed $argv[1..2]
        $argv[3..]
        and set -q _hc_doing
        and hc_state_save $argv[1..2]
    end
end

function hc_symlink_if -a to from
    if test $status -eq 0
        echo "symlinking $from -> $to"
        not set -q hc_dry_run; and safe_symlink $argv
    end
end

set hc_state ~/.config/home-configure/state

mkdir -p $hc_state

function packages_pacman_get_explicitly_installed; pacman -Qeq; end
function packages_pacman_get_installed; pacman -Qq; end
function packages_pacman_mark_implicit; pacman -D --asdeps $argv; end
function packages_pacman_mark_explicit; pacman -D --asexplicit $argv; end
function packages_pacman_install; pacman -S $argv; end
function packages_apt_get_explicitly_installed; apt-mark showmanual; end
function packages_apt_get_installed; dpkg-query -f '${Package}\n' -W; end
function packages_apt_mark_implicit; sudo apt-mark auto $argv; end
function packages_apt_mark_explicit; sudo apt-mark manual $argv; end
function packages_apt_install; sudo apt install $argv; end
function _packages_apply -a manager
    set selections $argv[2..]
    set explicit (packages_{$manager}_get_explicitly_installed)
    or return 1
    set installed (packages_{$manager}_get_installed)
    or return 1
    # installed n selections \ explicit
    for pkg in $installed
        if contains $pkg $selections; and not contains $pkg $explicit
            set -a make_explicit $pkg
        end
    end
    if set -q make_explicit
        hc_doing "($manager) marking as wanted: $make_explicit"
        and packages_{$manager}_mark_explicit $make_explicit || return 1
    end
    # explicit \ selections
    for pkg in $explicit
        if not contains $pkg $selections
            set -a make_implicit $pkg
        end
    end
    if set -q make_implicit
        hc_doing "($manager) marking as dependency: $make_implicit"
        and packages_{$manager}_mark_implicit $make_implicit || return 1
    end
    # selections \ installed
    for pkg in $selections
        if not contains $pkg $installed
            set -a install $pkg
        end
    end
    if set -q install
        hc_doing "($manager) installing $install"
        and packages_{$manager}_install $install || return 1
    end
end
function packages_apply
    hc_set_state_by pkgapply_$argv[1] "$argv[2..]" _packages_apply $argv
end

function _dl_ta
    test -e $HOME/.textadept-bin
    or not hc_doing "downloading textadept"
    and return
    set dir (mktemp -d)
    cd $dir
    curl -LO https://github.com/orbitalquark/textadept/releases/download/textadept_12.7/textadept_12.7.linux.tgz
    and tar -xaf textadept_12.7.linux.tgz
    and mv -T textadept $HOME/.textadept-bin
    cd -
    rm -r $dir
end

function configure
    source ~/home-configuration.fish

    set -q textadept; hc_if
        hc_then _dl_ta
        hc_then_symlink $HOME/.textadept-bin/textadept $HOME/.local/bin/textadept

    safe_rm_symlink ~/.config/fish/conf.d
end

configure
echo
test "$(read -P "perform the above actions? (y/N) ")" = "y" || exit 0
set _hc_doing
configure
